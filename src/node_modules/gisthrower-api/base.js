'use strict';

const rp = require('request-promise');
const chalk = require('chalk');
const q = require('q');

const credentials = require('gisthrower-auth').credentials.getCredentials();
const headers = {
  'User-Agent': 'GISTHROWER-CLI',
  'Authorization': 'Token ' + credentials.token
};

const getErrorAsMessage = (error) => {
  if (error.statusCode === 401) {
    return chalk.bold.red.bgYellow('Invalid Credentials');
  }
};

const baseCall = (options) => {
  const deferred = q.defer();

  rp(options)
  .then((chunk) => {
    deferred.resolve(chunk);
  })
  .catch((error) => {
    deferred.reject(getErrorAsMessage(error));
  });

  return deferred.promise;
};

const get = (path) => {
  const options = {
    uri: 'https://api.github.com' + path,
    method: 'GET',
    headers: headers,
    json: true
  };

  return baseCall(options);
};

module.exports = {
  get: get
};
