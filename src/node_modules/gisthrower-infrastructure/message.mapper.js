'use strict';

const chalk = require('chalk');

const gistInformations = (rawData, index) => {
  let messageBlock = '{0}\n{1}\n{2}\n{3}';

  const delimiter = chalk.dim('+'.concat((Array(80).join('-')), '+'));
  let number = chalk.bold.green('| Gist number {0} on list'.format(index));
  let title = chalk.underline.bold.green('| Gist {0}'.format(rawData.description));
  let Id = chalk.underline.bold.blue('| Id {0}'.format(rawData.id));
  let access = chalk.green('| Access: {0}'.format((rawData.public ? 'Public' : 'Private')));

  return messageBlock.format(delimiter, number, title, Id, access);
};

const gistBasicDetails = (chunk) => {
  let messageBlock = '{0}\n{1}\n{2}\n{3}\n{4}\n{5}\n{6}';

  let header = chalk.dim('+'.concat((Array(80).join('=')), '+'));
  let delimiter = chalk.dim('+'.concat((Array(80).join('-')), '+'));

  let title = chalk.bold.bgBlack('| {0}'.format(chunk.description));
  let cloneUrl = chalk.bold.green('| clone url: {0}'.format(chunk.git_push_url));
  let created = chalk.bold.green('| created: {0}'.format(chunk.created_at));
  let updated = chalk.bold.green('| updated: {0}'.format(chunk.updated_at));

  return messageBlock.format(header, title, delimiter, cloneUrl, created, updated, delimiter);
};

const gistDetailedInformations = (chunk) => {
  let messageBlock = '{0}\n{1}\n{2}\n{3}\n{4}\n{5}\n{6}\n{7}\n{8}\n{9}\n{10}\n{11}\n{12}';

  let title = chalk.bold.dim('+ Details: ');
  let header = chalk.dim('+'.concat((Array(80).join('-')), '+'));

  let owner = chalk.green('| owner: {0}'.format(chunk.owner.login));
  const fileNames = Object.keys(chunk.files).join(', ');
  let files = chalk.green('| files: {0}'.format(fileNames));
  const fileLanguages = Object.keys(chunk.files).map(fileKey => chunk.files[fileKey].language).join(', ');
  let languages = chalk.green('| languages: {0}'.format(fileLanguages));
  let comments = chalk.green('| comments: {0}'.format(chunk.comments));

  let repositoryHeader = chalk.dim('+'.concat((Array(80).join('=')), '+'));
  let repositoryTitle = chalk.bold.dim('+ Repository Details');
  let deletions = chalk.bold.yellow('| deletions: {0}'.format(chunk.history[0].change_status.deletions));
  let additions = chalk.bold.yellow('| additions: {0}'.format(chunk.history[0].change_status.additions));
  let total = chalk.bold.yellow('| total: {0}'.format(chunk.history[0].change_status.total));
  let lastCommit = chalk.bold.yellow('| last commit: {0}'.format(chunk.history[0].committed_at));

  return messageBlock.format(title, header, owner, files, languages, comments, repositoryHeader, repositoryTitle, header, deletions, additions, total, lastCommit, header);
};

const gistFileDetails = (detail) => {
  let messageBlock = '{0}\n{1}\n{2}\n{3}';

  const delimiter = chalk.gray('+'.concat((Array(80).join('-')), '+'));
  const title = chalk.bold.gray('| {0} - Size: {1}'.format(detail.name, detail.size));
  const language = chalk.bold.gray('| Language: {0}'.format(detail.language));

  return messageBlock.format(delimiter, title, language, delimiter);
};

module.exports = {
  gistInformations: gistInformations,
  gistBasicDetails: gistBasicDetails,
  gistDetailedInformations: gistDetailedInformations,
  gistFileDetails: gistFileDetails
};
